name: Node.js CI/CD

on: [push] # tells github to run this on any push to the repository

jobs:
  test: # names the job
    runs-on: ubuntu-latest # sets the version of linux we want to use, should be what you have on your server

    strategy:
      fail-fast: true # tells github to not run further steps if this one fails
      matrix:
        node-version: [16.16] # sets the version of node we want to use, should be what you have on your server

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }} # names our step
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7.26.3
          run_install: false
      - run: pnpm install --frozen-lockfile # installs your dependencies
      - run: pnpm run build # builds your app
        env:
          CI: true # shows terminal output!

  deploy:
    runs-on: ubuntu-latest
    needs: test # this job depends on "test" having finished
    if: github.ref == 'refs/heads/main' # we tell Github to only execute this step if we're on our master branch (so we don't put unfinished branches in production)
    steps:
      - name: Deploying to web server
        uses: appleboy/ssh-action@master # An action made to control Linux servers
        with: # We set all our secrets here for the action, these won't be shown in the action logs
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{secrets.FILEPATH}} # we move into our app's folder
            ./run.sh # script for running all the commands we want in order
            #git pull # we pull any changes from git
            #pnpm stop # stop all instances
            #pnpm prune # clean
            #pnpm install --frozen-lockfile # install any new packages
            #pnpm start # runs a build and restarts pm2
